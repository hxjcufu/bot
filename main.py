import telebot
from telebot import types
import random

TOKEN = '8366715994:AAFf09auAmguMGv_8fPHSaD9L4twOHteAo4'
OWNER_ID = 2106708967
ADMIN_IDS = [OWNER_ID, 7841720739]

bot = telebot.TeleBot(TOKEN)

user_reports = {}
all_reports = {}
report_counter = 0
complaint_data = {}
blocked_users = set()

# –î–ª—è –ø—Ä–∞–Ω–∫–∞ ‚Äî —Å–ø–∏—Å–æ–∫ —à—É—Ç–æ–∫ –∏ –∏–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
prank_jokes = [
    "üòÇ –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —É–¥–∞–ª–∏–ª –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫!",
    "üõë –í—ã –±—ã–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ –±–∞–Ω... –®—É—Ç–∫–∞ üòú",
    "üëª –°–∑–∞–¥–∏ —Ç–µ–±—è... –æ–π, —ç—Ç–æ —Ç–≤–æ—è —Ç–µ–Ω—å.",
    "üîá –£ —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å –Ω–µ—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞... –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ.",
    "üí£ –ë–æ—Ç —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∏—Ç—Å—è —á–µ—Ä–µ–∑... 3... 2... 1... –®—É—Ç–∫–∞!",
    "üìµ –£ —Ç–µ–±—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω Telegram. –ü–µ—Ä–µ–∑–≤–æ–Ω–∏ –≤ ICQ!",
    "üéØ –¢—ã –≤—ã–∏–≥—Ä–∞–ª... –Ω–∏—á–µ–≥–æ! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!",
    "üêí –û–±–µ–∑—å—è–Ω–∞ –≤–∑–ª–æ–º–∞–ª–∞ —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç. –ù–æ –Ω–µ –±–æ–π—Å—è, –æ–Ω–∞ –¥–æ–±—Ä–∞—è.",
    "üéâ –°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å! –ù–æ —ç—Ç–æ –±—ã–ª –≤—á–µ—Ä–∞.",
    "ü¶Ñ –ï–¥–∏–Ω–æ—Ä–æ–≥ —Ç–æ–ª—å–∫–æ —á—Ç–æ –ª–∞–π–∫–Ω—É–ª —Ç–≤–æ—é –∂–∞–ª–æ–±—É.",
    "üö´ –¢—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏. –ò–ª–∏ –º–æ–∂–µ—à—å?",
    "ü§° –¢—ã –≤ —Ü–∏—Ä–∫–µ. –¢–æ–ª—å–∫–æ –Ω–µ –∑–∞–±—É–¥—å –≤—ã–π—Ç–∏!",
    "üéÆ –¢—ã —Å–ª—É—á–∞–π–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ä–µ–∂–∏–º: '–±–µ—Å–ø–æ–ª–µ–∑–Ω–∞—è –∫–Ω–æ–ø–∫–∞'.",
    "üì¶ –£–ø—Å! –¢—ã –∑–∞–∫–∞–∑–∞–ª –∞–Ω–∞–Ω–∞—Å –≤ –∫–æ—Ä–æ–±–∫–µ!",
    "üòà –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∑–≤–∞–ª –±–∞–≥–∏. –ë–æ—Ç —É–∂–µ —á–∏–Ω–∏—Ç—Å—è.",
    "ü™ê –¢—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ú–∞—Ä—Å... –ñ–¥–∏ —Å–∏–≥–Ω–∞–ª–∞.",
    "ü•∑ –•–∞–∫–µ—Ä –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É... —à—É—Ç–∫–∞, —ç—Ç–æ —Ç—ã.",
    "üîã –ó–∞—Ä—è–¥ –±–æ—Ç–∞ –Ω–∞ 1%. –ü–æ–º–æ–≥–∏ –ª–∞–π–∫–æ–º!",
    "üß† –£—Ä–æ–≤–µ–Ω—å IQ –ø—Ä–µ–≤—ã—à–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫!",
    "üì° –¢—ã –≤–∫–ª—é—á–∏–ª WiFi –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º!"
]
user_prank_index = {}

def main_menu():
    markup = types.InlineKeyboardMarkup(row_width=3)
    markup.add(
        types.InlineKeyboardButton("üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É", callback_data="send_report"),
        types.InlineKeyboardButton("üìû –°–≤—è–∑—å —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º", callback_data="contact_owner"),
        types.InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="my_reports"),
        types.InlineKeyboardButton("üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", callback_data="viewed_reports"),
        types.InlineKeyboardButton("‚ÑπÔ∏è –ü—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞", callback_data="rules"),
        types.InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é", callback_data="refresh_menu"),
        types.InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help"),
        types.InlineKeyboardButton("üõë –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data="block_user"),
        types.InlineKeyboardButton("‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data="unblock_user"),
        types.InlineKeyboardButton("üìù –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message"),
        types.InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å –º–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="clear_reports"),
        types.InlineKeyboardButton("‚õî Poslat' nahui", callback_data="poslat_nahui"),
        types.InlineKeyboardButton("üé≠ –ü—Ä–∞–Ω–∫", callback_data="prank_user")
    )
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 24/7!\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ '–∂–∞–ª–æ–±–∞', —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –Ω–∞—á–∞—Ç—å –∂–∞–ª–æ–±—É.",
        reply_markup=main_menu()
    )

@bot.message_handler(func=lambda message: message.text and message.text.lower() == "–∂–∞–ª–æ–±–∞")
def start_report_text(message):
    user_id = message.from_user.id
    complaint_data[user_id] = {}
    bot.send_message(message.chat.id, "üîπ –®–∞–≥ 1/6: –£–∫–∞–∂–∏ —Å–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º (–∏–ª–∏ –Ω–∞–ø–∏—à–∏ '–±–µ–∑ –Ω–∏–∫–∞'):")
    bot.register_next_step_handler(message, process_username)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    user_id = call.from_user.id
    global report_counter

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∂–∞–ª–æ–± –∞–¥–º–∏–Ω–æ–º
    if call.data.startswith("approve_") or call.data.startswith("reject_"):
        action, rid_str = call.data.split("_")
        rid = int(rid_str)
        if user_id not in ADMIN_IDS:
            bot.answer_callback_query(call.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.", show_alert=True)
            return

        report = all_reports.get(rid)
        if not report:
            bot.answer_callback_query(call.id, "‚ö†Ô∏è –ñ–∞–ª–æ–±–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
            Return
if report['status'] != '–í –æ–∂–∏–¥–∞–Ω–∏–∏':
            bot.answer_callback_query(call.id, "‚ÑπÔ∏è –≠—Ç–∞ –∂–∞–ª–æ–±–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.", show_alert=True)
            return

        if action == "approve":
            report['status'] = '–ü—Ä–∏–Ω—è—Ç–∞'
            bot.send_message(report['user_id'], f"‚úÖ –í–∞—à–∞ –∂–∞–ª–æ–±–∞ ‚Ññ{rid} –ø—Ä–∏–Ω—è—Ç–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.")
            bot.answer_callback_query(call.id, "–ñ–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞.")
        elif action == "reject":
            report['status'] = '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞'
            bot.send_message(report['user_id'], f"‚ùå –í–∞—à–∞ –∂–∞–ª–æ–±–∞ ‚Ññ{rid} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º.")
            bot.answer_callback_query(call.id, "–ñ–∞–ª–æ–±–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        return

    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫
    if call.data == "send_report":
        complaint_data[user_id] = {}
        bot.send_message(call.message.chat.id, "üîπ –®–∞–≥ 1/6: –£–∫–∞–∂–∏ —Å–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º (–∏–ª–∏ –Ω–∞–ø–∏—à–∏ '–±–µ–∑ –Ω–∏–∫–∞'):")
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, process_username)

    elif call.data == "contact_owner":
        bot.send_message(call.message.chat.id, "üì® –°–≤—è–∑–∞—Ç—å—Å—è —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º: @WellLoveyou")

    elif call.data == "my_reports":
        reports = user_reports.get(user_id, [])
        if not reports:
            bot.send_message(call.message.chat.id, "üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∂–∞–ª–æ–±.")
        else:
            text = ""
            for r in reports:
                text += f"üÜî –ñ–∞–ª–æ–±–∞ #{r['id']}\n‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {r['reason'][:50]}{'...' if len(r['reason'])>50 else ''}\n–°—Ç–∞—Ç—É—Å: {r['status']}\n\n"
            bot.send_message(call.message.chat.id, f"üìã –¢–≤–æ–∏ –∂–∞–ª–æ–±—ã:\n\n{text}")

    elif call.data == "viewed_reports":
        reports = user_reports.get(user_id, [])
        viewed = [r for r in reports if r['status'] != '–í –æ–∂–∏–¥–∞–Ω–∏–∏']
        if not viewed:
            bot.send_message(call.message.chat.id, "üëÅ –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫.")
        else:
            text = ""
            for r in viewed:
                text += f"üÜî –ñ–∞–ª–æ–±–∞ #{r['id']}\n‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {r['reason'][:50]}{'...' if len(r['reason'])>50 else ''}\n–°—Ç–∞—Ç—É—Å: {r['status']}\n\n"
            bot.send_message(call.message.chat.id, f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:\n\n{text}")

    elif call.data == "rules":
        bot.send_message(call.message.chat.id, "üìú –ü—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞:\n- –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–º–µ\n- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –º–∞—Ç –∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è\n- –£–≤–∞–∂–∞–π –¥—Ä—É–≥–∏—Ö\n- –ù–µ —Å–ø–∞–º—å")

    elif call.data == "refresh_menu":
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=main_menu())

    elif call.data == "help":
        bot.send_message(call.message.chat.id,
            "‚ùì *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:*\n"
            "- –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n"
            "- –û—Ç–ø—Ä–∞–≤–ª—è–π –∂–∞–ª–æ–±—ã –ø–æ–¥—Ä–æ–±–Ω–æ\n"
            "- –°–≤—è–∑—ã–≤–∞–π—Å—è —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É\n"
            "- –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–ø–∏—à–∏ /start", parse_mode="Markdown")

    elif call.data == "block_user":
        if user_id not in ADMIN_IDS:
            bot.answer_callback_query(call.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", show_alert=True)
            return
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:")
        bot.register_next_step_handler(call.message, block_user_step)

    elif call.data == "unblock_user":
        if user_id not in ADMIN_IDS:
            bot.answer_callback_query(call.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", show_alert=True)
            return
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:")
        bot.register_next_step_handler(call.message, unblock_user_step)

    elif call.data == "send_message":
        if user_id not in ADMIN_IDS:
            bot.answer_callback_query(call.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.", show_alert=True)
            return
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å:")
        bot.register_next_step_handler(call.message, send_message_step_user)
elif call.data == "clear_reports":
        user_reports[user_id] = []
        bot.send_message(call.message.chat.id, "üóë –í–∞—à–∏ –∑–∞—è–≤–∫–∏ –æ—á–∏—â–µ–Ω—ã.")

    elif call.data == "poslat_nahui":
        bot.send_message(call.message.chat.id, "üñï –ù—É –≤–æ—Ç –∏ –ø–æ—Å–ª–∞–ª!")

    elif call.data == "prank_user":
        # –ü—Ä–∞–Ω–∫ ‚Äî –º–µ–Ω—è–µ–º —à—É—Ç–∫—É –Ω–∞ –Ω–æ–≤—É—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –ø–æ–¥—Ä—è–¥
        idx = user_prank_index.get(user_id, -1)
        next_idx = (idx + 1) % len(prank_jokes)
        user_prank_index[user_id] = next_idx
        bot.send_message(call.message.chat.id, prank_jokes[next_idx])

def block_user_step(message):
    try:
        uid = int(message.text.strip())
        blocked_users.add(uid)
        bot.send_message(message.chat.id, f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {uid} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID.")

def unblock_user_step(message):
    try:
        uid = int(message.text.strip())
        if uid in blocked_users:
            blocked_users.remove(uid)
            bot.send_message(message.chat.id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {uid} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
        else:
            bot.send_message(message.chat.id, "‚ÑπÔ∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID.")

def send_message_step_user(message):
    try:
        uid = int(message.text.strip())
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {uid}:")
        bot.register_next_step_handler(message, send_message_step_text, uid)
    except:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID.")

def send_message_step_text(message, uid):
    text = message.text.strip()
    try:
        bot.send_message(uid, f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n\n{text}")
        bot.send_message(message.chat.id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")

def process_username(message):
    user_id = message.from_user.id
    if user_id in blocked_users:
        bot.send_message(message.chat.id, "üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∂–∞–ª–æ–±—ã.")
        return
    username = message.text.strip()
    if not username:
        username = "–±–µ–∑ –Ω–∏–∫–∞"
    complaint_data[user_id] = {'user_username': username, 'user_id': user_id}
    bot.send_message(message.chat.id, "üîπ –®–∞–≥ 2/6: –û–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã (–º–∏–Ω. 10 —Å–∏–º–≤–æ–ª–æ–≤):")
    bot.register_next_step_handler(message, process_reason)

def process_reason(message):
    user_id = message.from_user.id
    if user_id in blocked_users:
        bot.send_message(message.chat.id, "üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∂–∞–ª–æ–±—ã.")
        return
    reason = message.text.strip()
    if len(reason) < 10:
        msg = bot.send_message(message.chat.id, "‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ. –û–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ (–º–∏–Ω. 10 —Å–∏–º–≤–æ–ª–æ–≤):")
        bot.register_next_step_handler(msg, process_reason)
        return
    complaint_data[user_id]['reason'] = reason
    bot.send_message(message.chat.id, "üîπ –®–∞–≥ 3/6: –£–∫–∞–∂–∏ —é–∑–µ—Ä–Ω–µ–π–º –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è (–∏–ª–∏ '–±–µ–∑ –Ω–∏–∫–∞'):")
    bot.register_next_step_handler(message, process_violator_username)

def process_violator_username(message):
    user_id = message.from_user.id
    if user_id in blocked_users:
        bot.send_message(message.chat.id, "üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∂–∞–ª–æ–±—ã.")
        return
    violator_username = message.text.strip()
    if not violator_username:
        violator_username = "–±–µ–∑ –Ω–∏–∫–∞"
    complaint_data[user_id]['violator_username'] = violator_username
    bot.send_message(message.chat.id, "üîπ –®–∞–≥ 4/6: –£–∫–∞–∂–∏ ID –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è (—á–∏—Å–ª–æ):")
bot.register_next_step_handler(message, process_violator_id)
def process_violator_id(message):
    user_id = message.from_user.id
    if user_id in blocked_users:
        bot.send_message(message.chat.id, "üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∂–∞–ª–æ–±—ã.")
        return
    if not message.text.strip().isdigit():
        msg = bot.send_message(message.chat.id, "‚ö†Ô∏è ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑:")
        bot.register_next_step_handler(msg, process_violator_id)
        return
    complaint_data[user_id]['violator_id'] = int(message.text.strip())
    bot.send_message(message.chat.id, "üîπ –®–∞–≥ 5/6: –ï—Å—Ç—å –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è? –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –Ω–∞–ø–∏—à–∏ '–Ω–µ—Ç':")
    bot.register_next_step_handler(message, process_extra_info)

def process_extra_info(message):
    global report_counter
    user_id = message.from_user.id
    if user_id in blocked_users:
        bot.send_message(message.chat.id, "üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
        return
    extra = message.text.strip()
    if extra.lower() == '–Ω–µ—Ç':
        extra = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    complaint_data[user_id]['extra_info'] = extra

    report_counter += 1
    rid = report_counter
    data = complaint_data[user_id]
    report = {
        'id': rid,
        'user_id': user_id,
        'user_username': data['user_username'],
        'reason': data['reason'],
        'violator_username': data['violator_username'],
        'violator_id': data['violator_id'],
        'extra_info': data['extra_info'],
        'status': '–í –æ–∂–∏–¥–∞–Ω–∏–∏'
    }

    user_reports.setdefault(user_id, []).append(report)
    all_reports[rid] = report

    report_text = (
        f"üö® *–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞ ‚Ññ{rid}*\n\n"
        f"üë§ *–ñ–∞–ª–æ–±—â–∏–∫:* @{report['user_username']} | ID: {report['user_id']}\n"
        f"‚ö†Ô∏è *–ü—Ä–∏—á–∏–Ω–∞:* {report['reason']}\n"
        f"üëÆ *–ù–∞—Ä—É—à–∏—Ç–µ–ª—å:* @{report['violator_username']} | ID: {report['violator_id']}\n"
        f"üìù *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:* {report['extra_info']}\n\n"
        f"‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ä–æ–±–Ω—É—é –∂–∞–ª–æ–±—É!"
    )

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"approve_{rid}"),
        types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{rid}")
    )

    for admin_id in ADMIN_IDS:
        bot.send_message(admin_id, report_text, parse_mode="Markdown", reply_markup=markup)

    bot.send_message(message.chat.id, "‚úÖ –ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É. –°–ø–∞—Å–∏–±–æ!")

@bot.message_handler(commands=['–∏–Ω—Ñ–æ'])
def group_info(message):
    if message.chat.type in ['group', 'supergroup']:
        text = (
            "‚úâÔ∏è –ö—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç: _—Ö–æ—á—É –Ω–∞–ø–∏—Å–∞—Ç—å –∂–∞–ª–æ–±—É_\n"
            "üì≤ –ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: [@SluzhbaPomoshchiBot](https://t.me/SluzhbaPomoshchiBot)"
        )
        bot.send_message(message.chat.id, text, parse_mode="Markdown")

@bot.message_handler(func=lambda msg: msg.chat.type in ['group', 'supergroup'] and '—Ö–æ—á—É –Ω–∞–ø–∏—Å–∞—Ç—å –∂–∞–ª–æ–±—É' in msg.text.lower())
def want_to_report(message):
    bot.send_message(message.chat.id,
        "üì≤ –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –∂–∞–ª–æ–±—É –±–æ—Ç—É –≤ –ª–∏—á–∫—É: [@SluzhbaPomoshchiBot](https://t.me/SluzhbaPomoshchiBot)",
        parse_mode="Markdown"
    )

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
